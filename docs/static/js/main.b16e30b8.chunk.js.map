{"version":3,"sources":["movie/Movie.js","list/MoviesList.js","header/Header.js","home/Home.js","movieDetail/MovieDetail.js","App.js","services/fetchMovies.js","serviceWorker.js","index.js"],"names":["Movie","react_default","a","createElement","className","src","this","props","image","alt","title","class","rating","react_router_dom","to","concat","id","React","Component","MoviesList","movies","map","item","movie_Movie","Header","Home","Fragment","header_Header","list_MoviesList","handleFilter","MovieDetail","moviesid","parseInt","takeParams","match","params","movie","find","undefined","synopsis","director","cast","element","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getMovies","bind","assertThisInitialized","LS","JSON","parse","localStorage","getItem","length","setState","_this2","fetch","then","response","json","data","setItem","stringify","_this3","react_router","exact","path","render","home_Home","movieDetail_MovieDetail","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","src_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b16e30b8.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './_movie.scss'\n\n\nclass Movie extends React.Component {\n  render() {\n    return(\n      <div className=\"movie_container\">\n        <img src={this.props.image} alt={this.props.title} className='img' />\n        <h3 className=\"movie_title\">{this.props.title}</h3>\n        <p className=\"rating\"><span><i class=\"fas fa-star star\"></i></span>{this.props.rating}</p>\n        <div  className=\"link_more\">\n        <Link to={`/detail/${this.props.id}`} className=\"more\">Ver más</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react';\nimport Movie from '../movie/Movie'\nimport './_moviesList.scss'\n\nclass MoviesList extends React.Component {\n  render() {\n    return (\n      <ul className=\"list\">\n      {this.props.movies\n        .map(item => {\n          return (\n            <li className=\"list_item\">\n              <Movie \n              title={item.title}\n              image={item.image}\n              rating={item.rating}\n              id={item.id}/>\n            </li>\n          )\n        })\n        }\n        </ul>\n    ) \n  }\n}\n\nexport default MoviesList;","import React from 'react';\nimport './_header.scss'\nclass Header extends React.Component {\n  render() {\n    return(\n        <header className=\"nav_bar\">\n          <div className=\"logo\">Logo</div>\n          \n        </header>\n      \n    );\n  }\n}\nexport default Header;","import React from 'react';\nimport MoviesList from '../list/MoviesList';\nimport Header from '../header/Header'\nimport './_home.scss'\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"home_container\">\n        <h1 className=\"title\">Mis películas favoritas</h1>\n        <MoviesList \n        movies={this.props.movies}\n        handleFilter={this.handleFilter}\n        />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default Home;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Header from '../header/Header'\nimport './_movieDetail.scss'\n\nclass MovieDetail extends React.Component {\n  render() {\n    const moviesid = parseInt(this.props.takeParams.match.params.movie);\n    const find = this.props.movies.find(item => item.id === moviesid);\n    return(\n      <React.Fragment>\n        <Header />\n        {find !== undefined ?\n        <div className=\"movie_detail\">\n        <div className=\"detail_container\">\n          <div className=\"img_detail\">\n          <img src={find.image} alt={find.title} />\n          </div>\n          <h2 className=\"title_detail\">{find.title}</h2>\n          <p className=\"synopsis\">{find.synopsis}</p>\n          <div className=\"lists\">\n          <ul className=\"directors_list\">\n            <p>Director: </p>\n            {find.director\n              .map(item => {\n                return (\n                  <li className=\"director_element\">{item}</li>\n                )\n              }\n              )}\n          </ul>\n          <ul className=\"cast_list\">\n            <p>Actores: </p>\n            {find.cast\n              .map(element => {\n                return (\n                  <li className=\"cast_element\">{element}</li>\n                )\n              }\n              )}\n          </ul>\n          </div>\n          <p className=\"rating_detail\"><span><i class=\"fas fa-star star_detail\"></i></span>{find.rating}</p>\n          <Link to=\"/\" className=\"link_volver\">Volver</Link>\n        </div>\n        </div>\n        :\n        <p>Loading...</p>}\n      </React.Fragment>\n    )\n  }\n}\nexport default MovieDetail;","import React from 'react';\nimport {fetchMovies} from './services/fetchMovies';\nimport Home from './home/Home'\nimport {Switch, Route} from 'react-router-dom';\nimport MovieDetail from './movieDetail/MovieDetail'\n\nclass App extends React.Component\n {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      movies: [],\n    }\n    this.getMovies = this.getMovies.bind(this);\n  }\n  componentDidMount(){\n    const LS = JSON.parse(localStorage.getItem('data'));\n    if(!LS || !LS.length) {\n      this.getMovies();\n    } else {\n      this.setState({movies: LS});\n    }\n    \n  }\n  \n  getMovies(){\n    fetchMovies()\n      .then(data => {\n        this.setState({\n          movies: data\n        }, () => {localStorage.setItem('data', JSON.stringify(this.state.movies))})     \n  });\n}\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={() => \n          <Home \n            movies={this.state.movies}\n          />\n        }\n      />\n      <Route path=\"/detail/:movie\" render={(takeParams) => \n        <MovieDetail \n          takeParams={takeParams}\n          movies={this.state.movies}\n        />\n       }\n       />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://eeb98180-236b-43f6-be83-01af4d1d548f.mock.pstmn.io/test';\n\nconst fetchMovies = () => fetch(ENDPOINT)\n  .then(response => response.json())\n\n  export {fetchMovies};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, \n  document.getElementById('root'));\n  \n  serviceWorker.register();\n"],"sourceRoot":""}